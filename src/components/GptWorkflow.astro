---
import type { Section as SectionType } from '../types';
import Attributes from './workflow/Attributes.astro';
import Prompts from './workflow/Prompts.astro';
import Section from './workflow/Section.astro';
import Settings from './workflow/Settings.astro';
import SidebarDesktop from './workflow/SidebarDesktop.astro';
import SidebarDesktopContainer from './workflow/SidebarDesktopContainer.astro';
import SidebarMobile from './workflow/SidebarMobile.astro';
import SidebarMobileContainer from './workflow/SidebarMobileContainer.astro';
import TopBar from './workflow/TopBar.astro';
import WorkflowFlowchart from './workflow/WorkflowFlowchart.astro';
import WorkflowStats from './workflow/WorkflowStats.astro';

interface GptProps {
  sections: SectionType[];
  attributes: Record<string, { name: string; type: string; is_array: boolean }>;
  prompts: Record<string, { name: string; content: string }>;
  settings: Record<string, { title: string; name: string; value: string }>;
}

const { gpt } = Astro.props as { gpt: GptProps };
const settingsArray = Object.entries(gpt.settings).map(([name, value]) => ({ name, value }));
const currentStep = 5;
---
<div x-data="{ open: false, currentComponent: 'Research', activeMenuItem: 'sections' }" @menu-click.window="currentComponent = $event.detail" @keydown.window.escape="open = false">
  <SidebarMobileContainer>
    <SidebarMobile sections={gpt.sections} @click="currentComponent = $event.detail" />
  </SidebarMobileContainer>

  <SidebarDesktopContainer>
    <SidebarDesktop sections={gpt.sections} @click="currentComponent = $event.detail" />
  </SidebarDesktopContainer>

  <div class="lg:pl-72">
    <TopBar workflow={gpt} />

    <main class="py-10">
      <div class="px-4 sm:px-6 lg:px-8">
        <div x-show="currentComponent === 'overview'">
          <WorkflowStats workflow={gpt} />
          <WorkflowFlowchart workflow={gpt} />
        </div>
        <div x-show="currentComponent === 'attributes'">
          <Attributes attributes={gpt.attributes} />
        </div>
        <div x-show="currentComponent === 'prompts'">
          <Prompts prompts={gpt.prompts} />
        </div>
        <div x-show="currentComponent === 'settings'">
          <Settings settings={settingsArray} />
        </div>
        {gpt.sections.map((section) => (
          <div x-show={`currentComponent === '${section.name}'`} data-key={section.name}>
            <Section section={section} currentStep={currentStep} />
          </div>
        ))}
        <!--
        <PlaceholderFrame>
          <h2 class="text-2xl font-semibold mb-4">Current Component: <span x-text="currentComponent"></span></h2>
        </PlaceholderFrame>
        -->
      </div>
    </main>
  </div>
</div>
